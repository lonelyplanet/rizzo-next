@import "../../../sass/webpack_deps";

/// ----------------------------------------------------------------------------
/// Settings map
///
/// Settings are called via the `get` method, which is simply an alias for
/// Sass's `map-get` method.
///
/// @usage
/// `get($map-name, "setting-name")`
/// ----------------------------------------------------------------------------

$social-share: (
  "background-color": #f0f0f0,
  "button-size": 3rem,
  "margin-left": .4rem,
  "margin-top": .9rem
);





/// ----------------------------------------------------------------------------
/// Base
/// ----------------------------------------------------------------------------

.social-share {
  margin-left: -#{get($social-share, "margin-left")}; // Negative margin to offset first item's margin
}





/// ----------------------------------------------------------------------------
/// Modifiers
/// ----------------------------------------------------------------------------

// Used for when an action sheet is at the end of an `.article` and inside of
// the `.article-footer`
.social-share--article {
  float: left;

  @media (max-width: $max-720) {
    margin-right: 1.2rem;
  }

  @media (min-width: $min-720) {
    float: right;
    margin-top: -#{get($social-share, "margin-top")}; // Negative margin to offset first row of items' margin
  }
}





/// ----------------------------------------------------------------------------
/// Elements
/// ----------------------------------------------------------------------------

// Each action item; it wraps the control and menu, and should be a `div`
.social-share__item {
  display: inline-block;
  position: relative;
}

// A `button` element that expects an SVG icon to be inside of it
.social-share__control {
  background-color: get($social-share, "background-color");
  border: 0;
  border-radius: 100%;
  color: #333;
  cursor: pointer;
  display: inline-block;
  height: get($social-share, "button-size");
  line-height: 1;
  margin-left: get($social-share, "margin-left");
  margin-top: get($social-share, "margin-top");
  outline: 0;
  padding: 0;
  position: relative;
  transition: background-color $animation-speed linear;
  width: get($social-share, "button-size");

  &:hover,
  &:active,
  &:focus {
    background-color: darken(get($social-share, "background-color"), 3);
  }

  .svg-icon {
    vertical-align: middle;
  }
}

// The menu that holds each control's options; it wraps the menu-inner and
// menu-arrow, and should be a `div`. It has the stateful class `is-open`
// which is added by JavaScript and positions the menu.
.social-share__menu {
  overflow: hidden;
  padding: 1.5rem;
  pointer-events: auto;
  position: relative;
  z-index: z("middle");

  &.is-open {
    left: 3.5rem;
    position: absolute;

    @media (max-width: $max-720) {
      top: -3rem;
    }

    @media (min-width: $min-720) {
      left: (-10rem + 1.5rem);
    }
  }
}

// An inner wrapper for the menu items; it should be a `div` and it expects a
// `ul` of items to be inside of it. The social-share__control is also
// reposed and used for each menu item.
.social-share__menu__inner {
  background-color: #fff;
  border-radius: .4rem;
  box-shadow: .1rem 0 .2rem rgba(#000, .25), 0 0 .1rem rgba(#000, .35);
  overflow: auto;
  -webkit-overflow-scrolling: touch;
  padding: .8rem 0;
  position: relative;

  @media (min-width: $min-720) {
    box-shadow: 0 .1rem .2rem rgba(#000, .25), 0 0 .1rem rgba(#000, .35);
  }

  ul {
    list-style: none;
    margin: 0;
    padding: 0;
  }

  .social-share__control {
    background-color: #fff;
    border-radius: 0;
    display: block;
    font-size: 1.3rem;
    height: auto;
    line-height: 1.4;
    margin: 0;
    padding: .4rem 1.5rem;
    text-align: left;
    white-space: nowrap;
    width: 100%;

    &:hover,
    &:active,
    &:focus {
      background-color: #fff;
    }

    .svg-icon {
      margin-right: 1rem;
      position: relative;
      top: -.2rem;
    }
  }
}

// An empty `div` to create the menu's arrow; contains a pseudo element
.social-share__menu__arrow {
  clip-path: rect(-.4rem 1.4rem 1.8rem -.4rem);
  display: inline-block;
  left: .1rem;
  margin-top: -.7rem;
  position: absolute;
  top: 50%;

  @media (min-width: $min-720) {
    clip-path: rect(0 1.8rem 1.4rem -.4rem);
    left: 50%;
    margin-left: -.7rem;
    margin-top: 0;
    top: .1rem;
  }

  &::after {
    background-color: #fff;
    box-shadow: -.1rem .1rem .1rem -.1rem rgba(#000, .44);
    content: "";
    display: block;
    height: 1.4rem;
    transform: rotate(45deg) translate(.6rem, -.6rem);
    width: 1.4rem;

    @media (min-width: $min-720) {
      box-shadow: -.1rem -.1rem .1rem -.1rem rgba(#000, .44);
      transform: rotate(45deg) translate(.6rem, .6rem);
    }
  }
}
